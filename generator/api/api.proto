syntax = "proto3";
package api;

import "google/api/annotations.proto";

message IdentityProvider {
  string url = 1;
  string id = 2;
}

message ListIdentityProvidersRequest {
}

message ListIdentityProvidersResponse {
  repeated IdentityProvider identityProviders = 1;
}

message AddIdentityProviderRequest {
  string identityProviderUrl = 1;
  string emailOrPhone = 2;
}

message AddIdentityProviderResponse {
  string response = 1;
  string identityProviderId = 2;
  string identityProviderUrl = 3;
}

message ConfirmIdentityProviderRequest {
  string identityProviderUrl = 1;
  string identityProviderId = 2;
  string confirmationCode = 3;
}

message ConfirmIdentityProviderResponse {
  string response = 1;
}

message RegisterDeviceRequest {
  string devID = 1;
}

message RegisterDeviceResponse {
}

message ListNonRegisteredDevicesRequest {
}

message ListNonRegisteredDevicesResponse {
  repeated string devices = 1;
}

message AddWalletRequest {
  string QRcode = 1;
}

message AddWalletResponse {
}

message ListWalletsRequest {

}

message ListWalletsResponse {
  repeated string wallets = 1;
}

message WalletSharingRequest {
  string QRcode = 1;
  string comment = 2;
  string requestHash = 3;
}

message GetWalletSharingRequestsRequest {
}

message GetWalletSharingRequestsResponse {
  repeated WalletSharingRequest requests = 1;
}

message ApproveWalletSharingRequestRequest {
  string requestHash = 1;
}

message ApproveWalletSharingRequestResponse {
}

message DeleteWalletSharingRequestRequest {
  string requestHash = 1;
}

message DeleteWalletSharingRequestResponse {
}

message GetBluetoothEndpointsDescriptorsRequest {
}

message GetBluetoothEndpointsDescriptorsResponse {
  map<string, string> endpoints = 1;
}

message BluetoothEncryptionContainer {
  string iv = 1;
  string ciphertext = 2;
}

service GeneratorAdmin {
  rpc listIdentityProviders(ListIdentityProvidersRequest) returns (ListIdentityProvidersResponse);
  rpc addIdentityProvider(AddIdentityProviderRequest) returns (AddIdentityProviderResponse);
  rpc confirmIdentityProvider(ConfirmIdentityProviderRequest) returns (ConfirmIdentityProviderResponse);
  rpc registerDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse);
  rpc listNonRegisteredDevices(ListNonRegisteredDevicesRequest) returns (ListNonRegisteredDevicesResponse);
  rpc addWallet(AddWalletRequest) returns (AddWalletResponse);
  rpc listWallets(ListWalletsRequest) returns (ListWalletsResponse);
  rpc getWalletSharingRequests(GetWalletSharingRequestsRequest) returns (GetWalletSharingRequestsResponse);
  rpc approveWalletSharingRequest(ApproveWalletSharingRequestRequest) returns (ApproveWalletSharingRequestResponse);
  rpc deleteWalletSharingRequest(DeleteWalletSharingRequestRequest) returns (DeleteWalletSharingRequestResponse);
}